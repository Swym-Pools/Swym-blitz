import { Stage } from "@blitzjs/file-pipeline";
import { ServerEnvironment } from "../../config";
declare type ManifestVO = {
    keys: {
        [k: string]: string;
    };
    values: {
        [k: string]: string;
    };
};
export declare class Manifest {
    private keys;
    private values;
    private events;
    constructor(obj?: ManifestVO);
    getByKey(key: string): string;
    getByValue(value: string): string;
    setEntry(key: string, dest: string): void;
    removeKey(key: string): string;
    getEvents(): string[];
    toJson(compact?: boolean): string;
    toObject(): {
        keys: {
            [k: string]: string;
        };
        values: {
            [k: string]: string;
        };
    };
    static create(obj?: ManifestVO): Manifest;
}
/**
 * Returns a stage to create and write the file error manifest so we can
 * link to the correct files on a NextJS browser error.
 */
export declare const createStageManifest: (writeManifestFile: boolean | undefined, buildFolder: string, env: ServerEnvironment, manifestPath?: string) => Promise<Stage>;
export declare const ManifestLoader: {
    load(filename: string): Promise<Manifest>;
};
export {};
