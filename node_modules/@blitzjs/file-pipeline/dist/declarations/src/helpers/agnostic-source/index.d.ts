/// <reference types="node" />
import chokidar from "chokidar";
export declare const watch: (includePaths: string[] | string, options: chokidar.WatchOptions) => {
    stream: import("stream").Transform;
    fswatcher: chokidar.FSWatcher;
};
declare type SourceConfig = {
    cwd: string;
    include: string[];
    ignore: string[];
    watch: boolean;
};
/**
 * A stage that will provide agnostic file input based on a set of globs.
 * Initially it will start as a vinyl stream and if the watch config is
 * set to true it will also provide a file watcher.
 * @param config Config object
 */
export declare function agnosticSource({ ignore, include, cwd, watch: watching }: SourceConfig): {
    stream: NodeJS.ReadWriteStream;
    close: () => void | Promise<void>;
};
export {};
