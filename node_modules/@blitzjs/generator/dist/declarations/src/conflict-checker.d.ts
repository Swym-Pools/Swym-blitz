/// <reference types="node" />
import { Transform, TransformCallback } from "stream";
import File from "vinyl";
declare type PromptActions = "create" | "overwrite" | "skip" | "identical";
interface ConflictCheckerOptions {
    dryRun?: boolean;
}
export declare class ConflictChecker extends Transform {
    private readonly options?;
    private _destroyed;
    constructor(options?: ConflictCheckerOptions | undefined);
    _transform(file: File, _encoding: string, cb: TransformCallback): void;
    destroy(err?: Error): void;
    handlePush(file: File, status: PromptActions): void;
    private checkDiff;
    private printDiff;
    private fileStatusString;
}
export {};
