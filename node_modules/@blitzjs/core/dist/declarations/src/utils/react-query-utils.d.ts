import { QueryClient } from "react-query";
import { EnhancedResolverRpcClient, QueryFn, Resolver } from "../types";
declare type MutateOptions = {
    refetch?: boolean;
};
export declare const initializeQueryClient: () => QueryClient;
export declare const queryClient: QueryClient;
export interface QueryCacheFunctions<T> {
    setQueryData: (newData: T | ((oldData: T | undefined) => T), opts?: MutateOptions) => ReturnType<typeof setQueryData>;
}
export declare const getQueryCacheFunctions: <TInput, TResult, T extends QueryFn>(resolver: T | Resolver<TInput, TResult> | EnhancedResolverRpcClient<TInput, TResult>, params: TInput) => QueryCacheFunctions<TResult>;
export declare const emptyQueryFn: EnhancedResolverRpcClient<unknown, unknown>;
export declare const validateQueryFn: <TInput, TResult>(queryFn: Resolver<TInput, TResult> | EnhancedResolverRpcClient<TInput, TResult>) => void;
export declare const sanitizeQuery: <TInput, TResult>(queryFn: Resolver<TInput, TResult> | EnhancedResolverRpcClient<TInput, TResult>) => EnhancedResolverRpcClient<TInput, TResult>;
export declare const sanitizeMutation: <TInput, TResult>(queryFn: Resolver<TInput, TResult> | EnhancedResolverRpcClient<TInput, TResult>) => EnhancedResolverRpcClient<TInput, TResult>;
export declare const getQueryKeyFromUrlAndParams: (url: string, params: unknown) => [string, any];
export declare function getQueryKey<TInput, TResult, T extends QueryFn>(resolver: T | Resolver<TInput, TResult> | EnhancedResolverRpcClient<TInput, TResult>, params?: TInput): [string, any];
export declare function invalidateQuery<TInput, TResult, T extends QueryFn>(resolver: T | Resolver<TInput, TResult> | EnhancedResolverRpcClient<TInput, TResult>, params?: TInput): Promise<void>;
export declare function setQueryData<TInput, TResult, T extends QueryFn>(resolver: T | Resolver<TInput, TResult> | EnhancedResolverRpcClient<TInput, TResult>, params: TInput, newData: TResult | ((oldData: TResult | undefined) => TResult), opts?: MutateOptions): Promise<void | ReturnType<typeof queryClient.invalidateQueries>>;
export {};
