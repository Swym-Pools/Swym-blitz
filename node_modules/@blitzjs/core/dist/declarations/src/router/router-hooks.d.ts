import { Dict, ParsedUrlQuery } from "../types";
export declare function useRouterQuery(): Record<string, string | string[]>;
export declare function extractRouterParams(routerQuery: ParsedUrlQuery, query: ParsedUrlQuery): any;
declare type ReturnTypes = "string" | "number" | "array";
export declare function useParams(): Dict<string | string[]>;
export declare function useParams(returnType?: ReturnTypes): Dict<string | string[]>;
export declare function useParams(returnType: "string"): Dict<string>;
export declare function useParams(returnType: "number"): Dict<number>;
export declare function useParams(returnType: "array"): Dict<string[]>;
export declare function useParam(key: string): undefined | string | string[];
export declare function useParam(key: string, returnType: "string"): string | undefined;
export declare function useParam(key: string, returnType: "number"): number | undefined;
export declare function useParam(key: string, returnType: "array"): string[] | undefined;
export {};
