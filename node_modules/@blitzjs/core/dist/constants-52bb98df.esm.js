import SuperJson from 'superjson';
import { g as getBlitzRuntimeData } from './blitz-data-484e455b.esm.js';

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _createForOfIteratorHelperLoose(o, allowArrayLike) {
  var it;

  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      return function () {
        if (i >= o.length) return {
          done: true
        };
        return {
          done: false,
          value: o[i++]
        };
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  it = o[Symbol.iterator]();
  return it.next.bind(it);
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
}

var errorProps = ["name", "message", "code", "statusCode", "meta"];

if (process.env.JEST_WORKER_ID === undefined) {
  SuperJson.allowErrorProps.apply(SuperJson, errorProps);
}

var AuthenticationError = /*#__PURE__*/function (_Error) {
  _inheritsLoose(AuthenticationError, _Error);

  function AuthenticationError(message) {
    var _this;

    if (message === void 0) {
      message = "You must be logged in to access this";
    }

    _this = _Error.call(this, message) || this;
    _this.name = "AuthenticationError";
    _this.statusCode = 401;
    return _this;
  }

  _createClass(AuthenticationError, [{
    key: "_clearStack",
    get: function get() {
      return true;
    }
  }]);

  return AuthenticationError;
}( /*#__PURE__*/_wrapNativeSuper(Error));

if (process.env.JEST_WORKER_ID === undefined) {
  SuperJson.registerClass(AuthenticationError, {
    identifier: "BlitzAuthenticationError",
    allowProps: errorProps
  });
}

var CSRFTokenMismatchError = /*#__PURE__*/function (_Error2) {
  _inheritsLoose(CSRFTokenMismatchError, _Error2);

  function CSRFTokenMismatchError() {
    var _this2;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this2 = _Error2.call.apply(_Error2, [this].concat(args)) || this;
    _this2.name = "CSRFTokenMismatchError";
    _this2.statusCode = 401;
    return _this2;
  }

  _createClass(CSRFTokenMismatchError, [{
    key: "_clearStack",
    get: function get() {
      return true;
    }
  }]);

  return CSRFTokenMismatchError;
}( /*#__PURE__*/_wrapNativeSuper(Error));

if (process.env.JEST_WORKER_ID === undefined) {
  SuperJson.registerClass(CSRFTokenMismatchError, {
    identifier: "BlitzCSRFTokenMismatchError",
    allowProps: errorProps
  });
}

var AuthorizationError = /*#__PURE__*/function (_Error3) {
  _inheritsLoose(AuthorizationError, _Error3);

  function AuthorizationError(message) {
    var _this3;

    if (message === void 0) {
      message = "You are not authorized to access this";
    }

    _this3 = _Error3.call(this, message) || this;
    _this3.name = "AuthorizationError";
    _this3.statusCode = 403;
    return _this3;
  }

  _createClass(AuthorizationError, [{
    key: "_clearStack",
    get: function get() {
      return true;
    }
  }]);

  return AuthorizationError;
}( /*#__PURE__*/_wrapNativeSuper(Error));

if (process.env.JEST_WORKER_ID === undefined) {
  SuperJson.registerClass(AuthorizationError, {
    identifier: "BlitzAuthorizationError",
    allowProps: errorProps
  });
}

var NotFoundError = /*#__PURE__*/function (_Error4) {
  _inheritsLoose(NotFoundError, _Error4);

  function NotFoundError(message) {
    var _this4;

    if (message === void 0) {
      message = "This could not be found";
    }

    _this4 = _Error4.call(this, message) || this;
    _this4.name = "NotFoundError";
    _this4.statusCode = 404;
    return _this4;
  }

  _createClass(NotFoundError, [{
    key: "_clearStack",
    get: function get() {
      return true;
    }
  }]);

  return NotFoundError;
}( /*#__PURE__*/_wrapNativeSuper(Error));

if (process.env.JEST_WORKER_ID === undefined) {
  SuperJson.registerClass(NotFoundError, {
    identifier: "BlitzNotFoundError",
    allowProps: errorProps
  });
}

var PaginationArgumentError = /*#__PURE__*/function (_Error5) {
  _inheritsLoose(PaginationArgumentError, _Error5);

  function PaginationArgumentError(message) {
    var _this5;

    if (message === void 0) {
      message = "The pagination arguments are invalid";
    }

    _this5 = _Error5.call(this, message) || this;
    _this5.name = "PaginationArgumentError";
    _this5.statusCode = 422;
    return _this5;
  }

  return PaginationArgumentError;
}( /*#__PURE__*/_wrapNativeSuper(Error));

if (process.env.JEST_WORKER_ID === undefined) {
  SuperJson.registerClass(PaginationArgumentError, {
    identifier: "BlitzPaginationArgumentError",
    allowProps: errorProps
  });
}

var TOKEN_SEPARATOR = ";";
var HANDLE_SEPARATOR = ":";
var SESSION_TYPE_OPAQUE_TOKEN_SIMPLE = "ots";
var SESSION_TYPE_ANONYMOUS_JWT = "ajwt";
var SESSION_TOKEN_VERSION_0 = "v0";
var COOKIE_ANONYMOUS_SESSION_TOKEN = function COOKIE_ANONYMOUS_SESSION_TOKEN() {
  return getBlitzRuntimeData().sessionCookiePrefix + "_sAnonymousSessionToken";
};
var COOKIE_SESSION_TOKEN = function COOKIE_SESSION_TOKEN() {
  return getBlitzRuntimeData().sessionCookiePrefix + "_sSessionToken";
};
var COOKIE_REFRESH_TOKEN = function COOKIE_REFRESH_TOKEN() {
  return getBlitzRuntimeData().sessionCookiePrefix + "_sIdRefreshToken";
};
var COOKIE_CSRF_TOKEN = function COOKIE_CSRF_TOKEN() {
  return getBlitzRuntimeData().sessionCookiePrefix + "_sAntiCsrfToken";
}; // TODO remove before 1.0 -
// This is here for legacy compatability (misspelling)

var COOKIE_LEGACY_CSRF_TOKEN = function COOKIE_LEGACY_CSRF_TOKEN() {
  return getBlitzRuntimeData().sessionCookiePrefix + "_sAntiCrfToken";
};
var COOKIE_PUBLIC_DATA_TOKEN = function COOKIE_PUBLIC_DATA_TOKEN() {
  return getBlitzRuntimeData().sessionCookiePrefix + "_sPublicDataToken";
}; // Headers always all lower case

var HEADER_CSRF = "anti-csrf";
var HEADER_PUBLIC_DATA_TOKEN = "public-data-token";
var HEADER_SESSION_CREATED = "session-created";
var HEADER_SESSION_REVOKED = "session-revoked";
var HEADER_CSRF_ERROR = "csrf-error";
var LOCALSTORAGE_PREFIX = "_blitz-";

export { AuthenticationError as A, COOKIE_PUBLIC_DATA_TOKEN as C, HEADER_PUBLIC_DATA_TOKEN as H, LOCALSTORAGE_PREFIX as L, NotFoundError as N, PaginationArgumentError as P, SESSION_TYPE_OPAQUE_TOKEN_SIMPLE as S, TOKEN_SEPARATOR as T, _createForOfIteratorHelperLoose as _, COOKIE_CSRF_TOKEN as a, COOKIE_LEGACY_CSRF_TOKEN as b, HEADER_SESSION_REVOKED as c, HEADER_SESSION_CREATED as d, HEADER_CSRF_ERROR as e, CSRFTokenMismatchError as f, HEADER_CSRF as g, _construct as h, AuthorizationError as i, HANDLE_SEPARATOR as j, SESSION_TYPE_ANONYMOUS_JWT as k, SESSION_TOKEN_VERSION_0 as l, COOKIE_ANONYMOUS_SESSION_TOKEN as m, COOKIE_SESSION_TOKEN as n, COOKIE_REFRESH_TOKEN as o, _createClass as p };
