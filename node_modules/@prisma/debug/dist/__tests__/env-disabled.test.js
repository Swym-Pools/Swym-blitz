"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
process.env.DEBUG = '';
const __1 = __importStar(require(".."));
const strip_ansi_1 = __importDefault(require("strip-ansi"));
const util_1 = require("../util");
describe('debug', () => {
    test('* works as expected', () => {
        const debug = __1.default('my-namespace');
        const logs = [];
        debug.log = (...args) => {
            logs.push(strip_ansi_1.default(args[0]).trimStart());
        };
        debug('Does it even log?');
        debug('I dont know');
        expect(logs).toMatchInlineSnapshot(`Array []`);
        expect(util_1.sanitizeTestLogs(__1.getLogs())).toMatchInlineSnapshot(`
      "my-namespace Does it even log?
      my-namespace I dont know"
    `);
    });
});
//# sourceMappingURL=env-disabled.test.js.map