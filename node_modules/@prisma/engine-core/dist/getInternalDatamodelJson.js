"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getInternalDatamodelJson = void 0;
const path_1 = __importDefault(require("path"));
const child_process_1 = require("child_process");
const byline_1 = __importDefault(require("./byline"));
function getInternalDatamodelJson(datamodel, schemaInferrerPath = path_1.default.join(__dirname, '../schema-inferrer-bin')) {
    return new Promise((resolve, reject) => {
        const proc = child_process_1.spawn(schemaInferrerPath, {
            stdio: ['pipe', 'pipe', process.stderr],
        });
        proc.on('error', function (err) {
            console.error('[schema-inferrer-bin] error: %s', err);
            reject(err);
        });
        proc.on('exit', function (code, signal) {
            if (code !== 0) {
                console.error('[schema-inferrer-bin] exit: code=%s signal=%s', code, signal);
            }
            reject();
        });
        const out = byline_1.default(proc.stdout);
        out.on('data', (line) => {
            const result = JSON.parse(line);
            const resultB64 = Buffer.from(JSON.stringify(result)).toString('base64');
            resolve(resultB64);
        });
        const cut = datamodel.replace(/\n/g, ' ');
        proc.stdin.write(JSON.stringify({ dataModel: cut }) + '\n');
    });
}
exports.getInternalDatamodelJson = getInternalDatamodelJson;
//# sourceMappingURL=getInternalDatamodelJson.js.map