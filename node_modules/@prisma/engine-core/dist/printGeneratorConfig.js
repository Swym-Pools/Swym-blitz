"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.printDatamodelObject = exports.GeneratorConfigClass = exports.printGeneratorConfig = void 0;
const indent_string_1 = __importDefault(require("indent-string"));
function printGeneratorConfig(config) {
    return String(new GeneratorConfigClass(config));
}
exports.printGeneratorConfig = printGeneratorConfig;
class GeneratorConfigClass {
    constructor(config) {
        this.config = config;
    }
    toString() {
        const { config } = this;
        // parse & stringify trims out all the undefined values
        const obj = JSON.parse(JSON.stringify({
            provider: config.provider,
            binaryTargets: config.binaryTargets || undefined,
        }));
        return `generator ${config.name} {
${indent_string_1.default(printDatamodelObject(obj), 2)}
}`;
    }
}
exports.GeneratorConfigClass = GeneratorConfigClass;
function printDatamodelObject(obj) {
    const maxLength = Object.keys(obj).reduce((max, curr) => Math.max(max, curr.length), 0);
    return Object.entries(obj)
        .map(([key, value]) => `${key.padEnd(maxLength)} = ${niceStringify(value)}`)
        .join('\n');
}
exports.printDatamodelObject = printDatamodelObject;
function niceStringify(value) {
    return JSON.parse(JSON.stringify(value, (_, value) => {
        if (Array.isArray(value)) {
            return `[${value.map((element) => JSON.stringify(element)).join(', ')}]`;
        }
        return JSON.stringify(value);
    }));
}
//# sourceMappingURL=printGeneratorConfig.js.map