"use strict";
// Why is this in getPlatform... because of our dependency tree
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNapiName = exports.NAPI_QUERY_ENGINE_URL_BASE = void 0;
exports.NAPI_QUERY_ENGINE_URL_BASE = 'libquery_engine_napi';
function getNapiName(platform, type) {
    const isUrl = type === 'url';
    if (platform.includes('windows')) {
        return isUrl
            ? `query_engine_napi.dll.node`
            : `query_engine_napi-${platform}.dll.node`;
    }
    else if (platform.includes('linux') ||
        platform.includes('debian') ||
        platform.includes('rhel')) {
        return isUrl
            ? `${exports.NAPI_QUERY_ENGINE_URL_BASE}.so.node`
            : `${exports.NAPI_QUERY_ENGINE_URL_BASE}-${platform}.so.node`;
    }
    else if (platform.includes('darwin')) {
        return isUrl
            ? `${exports.NAPI_QUERY_ENGINE_URL_BASE}.dylib.node`
            : `${exports.NAPI_QUERY_ENGINE_URL_BASE}-${platform}.dylib.node`;
    }
    else {
        throw new Error(`NAPI is currently not supported on your platform: ${platform}`);
    }
}
exports.getNapiName = getNapiName;
//# sourceMappingURL=getNapiName.js.map