export interface WaitOptions {
    interval?: number;
    timeout?: number;
    suppressErrors?: boolean;
}
declare function asyncUtils(addResolver: (callback: () => void) => void): {
    waitFor: (callback: () => boolean | void, { interval, timeout, suppressErrors }?: WaitOptions) => Promise<void>;
    waitForNextUpdate: ({ timeout }?: Pick<WaitOptions, 'timeout'>) => Promise<void>;
    waitForValueToChange: (selector: () => unknown, options?: WaitOptions) => Promise<void>;
};
export default asyncUtils;
